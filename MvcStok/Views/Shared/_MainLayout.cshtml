
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>
<body>

    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" style="color:yellow"  href="/Category/Index/">Mvc Stok</a>
            </div>
            <ul class="nav navbar-nav">
                <li><a href="/Category/Index/">Kategoriler</a></li>
                @*✔ CategoryController yerine URL’de sadece Category yazılır.
                ✔ ASP.NET MVC, Controller’ların adındaki "Controller" ekini otomatik olarak kaldırır.
                ✔ Bu yüzden /Category yazınca CategoryController çalışır. 🚀*@
                <li><a href="/Product/Index/">Ürünler</a></li>
                <li><a href="/Customer/Index/">Müşteriler</a></li>
                <li><a href="/Order/Index/">Satışlar</a></li>
                <li><a href="/default/Index/">Yardım</a></li>
            </ul>
        </div>
    </nav>

    <div class="container">
        @RenderBody()
    </div>

    @*Yani, bir web sitesinde ana şablonu (layout) belirlediysen, her sayfanın içeriğini dinamik olarak bu şablon içine yerleştirmek için @RenderBody() kullanırsın.*@
</body>
</html>

